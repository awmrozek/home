<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head><title>Hoppke Repo » Artykuły » Kurs budowania pakietów RPM</title>













<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Language" content="pl">
<meta name="author" content="Grzegorz Niewęgłowski">

<link rel="shortcut icon" href="http://hoppke.dobremiasto.net/site/repo_icon.png" type="image/png">
<link rel="icon" href="http://hoppke.dobremiasto.net/site/repo_icon.png" type="image/png">
<link rel="stylesheet" type="text/css" href="kurs_budowania_pakietow_rpm_files/styles.css">
<link href="http://repo.dobremiasto.net/feed/entries" rel="alternate" type="application/rss+xml" title="RSS wpisów">
<link href="http://repo.dobremiasto.net/feed/comments" rel="alternate" type="application/rss+xml" title="RSS komentarzy"></head><body>




<div style="border-bottom: 2px solid white; margin: 0pt; padding: 0pt 0pt 0pt 180px; background: rgb(231, 231, 239) none repeat scroll 0%; -moz-background-clip: -moz-initial; -moz-background-origin: -moz-initial; -moz-background-inline-policy: -moz-initial; font-size: 12px; color: rgb(34, 34, 34); text-align: left; vertical-align: middle; height: 68px;">

<div style="margin: 0pt; padding: 13px 3px 3px; font-size: 16px; font-weight: bold;">
<a href="http://repo.dobremiasto.net/">ChangeBlog</a>
&nbsp;•&nbsp;
<a href="http://repo.dobremiasto.net/blog/">Archiwum</a>
&nbsp;•&nbsp;
<a href="http://repo.dobremiasto.net/tags/">Kategorie</a>
&nbsp;•&nbsp;
<a href="http://repo.dobremiasto.net/articles/">Artykuły</a>
&nbsp;•&nbsp;
<a href="http://repo.dobremiasto.net/photos/">Galeria</a>
&nbsp;•&nbsp;
<a href="http://repo.dobremiasto.net/blog/2006/04/12/opinie_czytelnikow">Czytelnicy</a>
&nbsp;•&nbsp;
<a href="http://repo.dobremiasto.net/rupiecie">Rupieciarnia</a>
</div>

<div style="margin: 0pt; padding: 3px;">
<a href="http://repo.dobremiasto.net/feed/entries" title="RSS wpisów">RSS wpisów</a>
&nbsp;|&nbsp;
<a href="http://repo.dobremiasto.net/feed/comments" title="RSS komentarzy">RSS komentarzy</a>
</div>

</div>

<div class="mainlogo" style="opacity: 0.3; position: absolute; top: 12px; left: 10px; margin-bottom: -90px; z-index: 10;"></div>
 
<div class="content">




<!-- multipage mode -->
<div class="title">Kurs budowania pakietów RPM

<div class="entryInfo"><div>Dalej: <a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/pliki_spec">Pliki .spec</a></div></div>

</div>
<div class="menu" style="margin-left: 15px; margin-top: 15px;">
<ol>




<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm">Kurs budowania pakietów RPM</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/pliki_spec">Pliki .spec</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/preambula">Preambuła</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/sekcja_prep">Sekcja %prep</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/sekcja_build">Sekcja %build</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/sekcja_install">Sekcja %install</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/sekcja_files">Sekcja %files</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/sekcja_pre_i_pokrewne">Sekcja %pre i pokrewne</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/czesc_praktyczna">Część praktyczna</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/prekonfigurowanie_makr_rpm-a">Prekonfigurowanie makr RPM-a</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/paczkujemy_gqview">Paczkujemy gqview-1.2.0.tar.gz</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/paczkujemy_mutt">Paczkujemy mutt-1.4.1i.tar.gz</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/paczkujemy_sed">Paczkujemy sed-4.0.7.tar.gz</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/paczkujemy_gentoo">Paczkujemy gentoo-0.11.34.tar.gz</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/paczkujemy_mc">Paczkujemy Midnight Commandera z CVS</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/paczkujemy_vima">Paczkujemy Vima z CVS</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/paczkujemy_elinksa">Paczkujemy ELinksa z CVS</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/paczkujemy_fvwm">Paczkujemy FVWM z CVS</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/paczkujemy_xwelltris">Paczkujemy xwelltris-1.0.1.src.tar.bz2</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/paczkujemy_groff">Paczkujemy groff-1.18.1.tar.bz2</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/paczkujemy_smartmontools">Paczkujemy smartmontools-5.1.tar.bz2</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/paczkujemy_zgv">Paczkujemy zgv-5.6.tar.bz2</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/jak_budowac_pakiety">Jak budować pakiety?</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/stripowanie">Stripowanie</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/dokumentacja_info">Dokumentacja Info</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/multisource">Multisource</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/multipackage">Multipackage</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/i18n">i18n</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/budowanie_warunkowe">Budowanie warunkowe</a></li>






<li><a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/historia_zmian_pakietu">Historia zmian pakietu</a></li>



</ol>
</div>

<div class="r">

<p>Używam systemu RPM jako narzędzia, które utrzymuje mój system w porządku
- ułatwia mi deinstalację całych pakietów oprogramowania, upgrade,
pozyskiwanie informacji o pakietach, zajmuje się też śledzeniem siatki
zależności między poszczególnymi programami i bibliotekami.</p>

<p>Nie używam jednak żadnej z dystrybucji Linuksa, przez co nie mam raczej
możliwości instalowania gotowych, przygotowanych przez kogoś pakietów
z oprogramowaniem. Mógłbym co prawda posiłkować się pakietami z różnych
dystrybucji, ale one by raczej nie pasowały zbyt dobrze do mojego systemu
- RPM to tylko szkielet, to że kilka dystrybucji używa tego samego
mechanizmu RPM nie oznacza wcale, że ich pakiety będą między sobą
kompatybilne. Bo nie będą.</p>

<p>Więc jestem skazany na samodzielne tworzenie pakietów RPM, a na dodatek
muszę to robić praktycznie z każdym instalowanym pakietem. Mimo sporego
nakładu sił i chęci jaki trzeba włożyć w zrozumienie całego mechanizmu
pakietów RPM, to wszystko jednak się opłaca. Nie chcę nikogo agitować do
pakowania się w sytuację w jakiej ja się znalazłem - czyli utrzymywanie
całego systemu linuksowego własnymi siłami (choć to w sumie nic złego, mnie
to jakoś nie zabiło) - ale nawet "pasywny" użytkownik systemu zbudowanego
na pakietach RPM może zyskać na zrozumieniu tego, co utrzymuje jego system
w porządku.</p>

<p><strong>Na system RPM składają się następujące komponenty:</strong></p>

<dl>
<dt>Baza informacji o zainstalowanych pakietach</dt>
<dd>Przechowywana zwykle w <tt>/var/lib/rpm/</tt>, składa się z wielu plików
w formacie Berkeley DB.</dd>

<dt>Aplikacje operujące na bazie danych</dt>
<dd>Różne programy które zmieniają bądź odpytują bazę danych. Instalują
pakiety, usuwają pakiety, pobierają informacje o pojedynczych plikach lub
pakietach etc.</dd>

<dt>Pakiety binarne</dt>
<dd>Najczęściej spotykane pakiety z rozszerzeniem <tt>.rpm</tt>. Zawierają
gotowe do zainstalowania, spakowane pliki wraz z informacjami o ich typie
i prawach dostępu, oraz nieco informacji o samym pakiecie - zależności
pakietu, informacje o nim, kategorię do której należy i inne takie.</dd>

<dt>Pakiety źródłowe</dt>
<dd>Rzadziej spotykana forma pakietów rpm. Mają rozszerzenie
<tt>.src.rpm</tt> i nie zawierają gotowych do zainstalowania plików. Ich
przeznaczenie jest inne - są czymś w rodzaju ładnie opakowanego kodu
źródłowego, który należy gdzieś rozpakować, skonfigurować oraz zainstalować.
Wszystko to pod kontrolą automatu RPM i przy jak najmniejszym obciążania
użytkownika. Przynajmniej w założeniach :)<br><br>

Takie paczki zawierają w sobie spakowany kod źródłowy programu oraz
ewentualne patche, które zostaną nałożone przed kompilacją. Źródła są
następnie konfigurowane według określonego wzorca, kompilowane,
a z wynikowych plików tworzone są binarne pakiety RPM gotowe do instalacji.
Jest to czysty i wygodny sposób kompilowania programów, bowiem taki pakiet
źródłowy zawiera oprócz "zwykłych" zależności także listę pakietów
potrzebnych przy kompilacji, a sam użytkownik zwykle potrzebny jest do dwóch
tylko czynności - uruchomienia procesu przebudowy takiego pakietu
i późniejszej instalacji pakietów wynikowych. Brzmi to bardzo miło w dosyć
złożonym światku linuksowych kompilacji, tyle że jest w tym jeden hak
- pakiet źródłowy musi być hiper-poprawnie skonstruowany i dopasowany dość
ściśle do systemu, na którym ma być kompilowany. Co zwykle oznacza, że
trzeba korzystać z pakietów źródłowych przygotowanych przez naszą
dystrybucję. "Zwykłe" źródła da się skompilować praktycznie na każdym
średnio przystosowanym systemie, ale pakiety źródłowe RPM dodają tutaj
warstewkę pośredniczącą - czyli mechanizm RPM właśnie - co zwiększa szanse
na niepowodzenie. Jest to bezpośrednio powiązane ze wspomnianą już
niezgodnością pakietów RPM pochodzących z różnych źródeł między
sobą.<br><br>

Oczywiście po zrozumieniu budowy i zasad działania pakietów RPM możliwe jest
poprawienie dowolnego pakietu <tt>.src.rpm</tt> tak, aby dał się przebudować
na dowolnym systemie...</dd>
</dl>

<p>I tutaj zaczynają się schody. Od czego należy zacząć? Hmm. Pierwszym krokiem
będzie przygotowanie środowiska pracy. Potrzebny będzie katalog dedykowany
budowaniu pakietów RPM, przyda się też porządny edytor do tworzenia
specyfikacji pakietów (jak zwykle, Vim będzie dobrym wyborem :)</p>

<p>Najpierw należy wybrać sobie miejsce na katalog przeznaczony budowaniu
pakietów RPM. Domyślnie tym katalogiem jest <tt>/usr/src/rpm</tt>, ale prawo
zapisu do tego katalogu ma tylko root. I nie należy korzystać z tego
katalogu (<tt>/usr/src/rpm</tt>) - pakiety RPM można bezproblemowo budować
korzystając z uprawnień zwykłego użytkownika (tylko instalacja i pokrewne
operacje wymagają praw superużytkownika). A więc skoro nie ma potrzeby
korzystania z konta roota, to nie należy tego robić, prawda? Załóżmy, że na
potrzeby rpm stworzyliśmy katalog <tt>~/rpm</tt>. Teraz trzeba tylko jeszcze
powiedzieć mechanizmom RPM, żeby z niego korzystały (zamiast próbować
dobierać się do <tt>/usr/src/rpm</tt>).</p>

<p>A można zrobić to poprzez plik <tt>~/.rpmmacros</tt>. Tutaj mała dygresja
- RPM jest bardzo elastyczny jeśli idzie o jego ustawienia, większość z nich
to zmienne (makra), które można przedefiniować. Makr tych jest całe
zatrzęsienie, dodatkowo wielka ich część jest zdefiniowana poprzez inne
makra, lub jest definiowana warunkowo, więc łatwo się w tym pogubić. A na
dodatek nie ma jednego porządnego podręcznika opisującego standardowe makra
wykorzystywane przez RPM. Dlatego trzeba sobie jakoś inaczej radzić.
Najlepszym sposobem jest chyba szukanie tego, co chcemy zmienić w plikach
<tt>/usr/lib/rpm/macros</tt>, <tt>/usr/lib/rpm/rpmrc</tt> oraz
pokrewnych.</p>

<p>Obok pliku makr istnieje też plik innych ustawień, generalnie dotyczących
architektury komputera docelowego. Plik zwie się
<tt>/usr/lib/rpm/rpmrc</tt>, a jego ustawienia można "przykryć" za pomocą
pliku <tt>~/.rpmrc</tt>. Jeśli jednak poczujesz się zagubiony w gąszczu tych
wszystkich deklaracji, możesz skorzystać z polecenia <tt>rpm --showrc</tt>
- wypluje ono aktualną listę wszystkich makr i ustawień, w takiej formie
w jakiej by były one używane po przeparsowaniu przez rpm wszystkich plików
konfiguracyjnych. Grepowanie wyjścia tego polecenia może bardzo szybko
wskazać, które makro odpowiada za zachowanie które chcemy zmienić. Jeśli
"ustawienie" w swojej definicji ma postać mniej-więcej <tt>nazwa
wartość</tt>, to można je zmienić wpisem w <tt>~/.rpmmacros</tt>. Jeśli
jednak wygląda ono raczej tak: <tt>nazwa: wartość</tt> (chodzi o ten
dwukropek), to należy je zmieniać w <tt>~/.rpmrc</tt>. Uff.</p>

<p>Wróćmy jednak do konfiguracji RPM. Za główny katalog używany przez RPM przy
budowaniu pakietów odpowiada makro <tt>%_topdir</tt>. Aby wskazać inny niż
domyślny katalog, wystarczy w pliku ~/.rpmmacros przedefiniować to makro.
A przy okazji można ustawić inne opcje, dotyczące np. podpisywania
tworzonych przez nas pakietów naszym kluczem PGP czy inne takie drobnostki.
Mały wycinek z mojego <tt>~/.rpmmacros</tt></p>

<pre class="b">%_topdir /home/grzegorz/rpm
%_tmppath /tmp
%packager Grzegorz Niewęgłowski
%vendor QuaTrin

</pre>

<p>Jak widać ustawiam tutaj ścieżkę do głównego katalogu rpm, katalogu
tymczasowego, oraz ustawiam pola <tt>Packager:</tt> oraz <tt>Vendor:</tt>
(widoczne np. w wyjściu <tt>rpm -qi</tt>) na wartości które lepiej
odpowiadają mojemu środowisku :)</p>

<p>Te drobne poprawki pozwalają już na w miarę wygodne budowanie pakietów przy
użyciu konta zwykłego użytkownika. A jak będzie wyglądać zawartość katalogu
rpm? Będzie on miał w sobie dodatkowe podkatalogi. Będą to <tt>SRPMS, RPMS,
SOURCES, SPECS</tt> i <tt>BUILD</tt>. <tt>SOURCES</tt> będzie przechowywał
paczki ze źródłami programów. W <tt>SPECS</tt> znajdą swoją ostoję
specyfikacje pakietów, czyli potocznie zwane "spece". Do <tt>BUILD</tt>
będą rozpakowywane źródła pobierane z <tt>SOURCES</tt>, tam też dokonywała
się będzie kompilacja programów. A <tt>RPMS</tt> i <tt>SRPMS</tt> będą
przechowywały powstałe w ostatniej fazie  procesu produkcyjnego binarne
i źródłowe pakiety RPM. Powinieneś pozakładać te podkatalogi. W razie
wątpliwości skopiuj strukturę z <tt>/usr/src/rpm</tt>.</p>

</div>

<div class="flush"></div>
<div class="title"><div class="entryInfo"><div>Dalej: <a href="http://repo.dobremiasto.net/articles/kurs_budowania_pakietow_rpm/pliki_spec">Pliki .spec</a></div></div></div>

</div>


</body></html>