<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html><head><title>Kurs jêzyka C i C++</title>

  
    
    <meta http-equiv="Content-Type" content="text/html; charset=windows-1250">
    <style type="text/css">
BODY {  margin-left: 1;
        margin-right: 1;
    	margin-top: 1;
        margin-bottom: 1;
    	background: #CDCDFF;
    }
a:link{
	color:#000066;
    	text-decoration:none;
    	font-family:Arial;
    	font-size:11pt}
a:visited{
          color:#FF0000;
          text-decoration:underline;
          font-family:Arial;
          font-size:11pt;}
a:active{
         color:#000000;
         text-decoration:none;
         font-family:Arial;
         font-size:11pt;}
a:hover{color:#ff0000;
         text-decoration:none;
         cursor:pointer;
         font-family:Tahoma;
         font-size:11pt;
         font-weight:normal;}
H1 {	
    	background: #FFE0C0;
    	text-align: CENTER;
    	font-family: ARIAL BLACK;
    	font-style: NORMAL;}
TABLE { 
    	width="640"
    	celpadding: 15PX;
    	text-align: top;
    	border-collapse: COLLAPSE;
    	border: 0px;
	}
TD {
    	border: SOLID 0PX;
    	padding: 10PX;
    	vertical-align: top;
    	margin-left: 1;margin-right: 1;
    	margin-top: 1;margin-bottom: 1;
    	text-align: left;
    }
TH { 
	text-align: CENTER;
    	vertical-align: bottom;
    	border: solid 2PX #000000;
    	color: #000000;
    	background: #FFE0C0;
    	font-weight: BOLDER;
    	font-size: 12PT;
    	padding: 15PX;

    }

</style></head><body>
<table align="center">
 <tbody><tr>
 <th colspan="2">
 <h1>Kurs jêzyka C++</h1>
 </th>
 </tr>
 <tr valign="top">
   <td bgcolor="#ffe0c0" width="150">
       <a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=kurs.txt">Kurs jêzyka C i C++</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA1.TXT">LEKCJA 1</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA2.TXT">LEKCJA 2</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA3.TXT">LEKCJA 3</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA4.TXT">LEKCJA 4</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA5.TXT">LEKCJA 5</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA6.TXT">LEKCJA 6</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA7.TXT">LEKCJA 7</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA8.TXT">LEKCJA 8</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA9.TXT">LEKCJA 9</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA10.TXT">LEKCJA 10</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA11.TXT">LEKCJA 11</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA13.TXT">LEKCJA 12</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA13.TXT">LEKCJA 13</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA14.TXT">LEKCJA 14</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA15.TXT">LEKCJA 15</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA16.TXT">LEKCJA 16</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA17.TXT">LEKCJA 17</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA18.TXT">LEKCJA 18</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA19.TXT">LEKCJA 19</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA20.TXT">LEKCJA 20</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA21.TXT">LEKCJA 21</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA22.TXT">LEKCJA 22</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA23.TXT">LEKCJA 23</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA24.TXT">LEKCJA 24</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA25.TXT">LEKCJA 25</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA26.TXT">LEKCJA 26</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA27.TXT">LEKCJA 27</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA28.TXT">LEKCJA 28</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA29.TXT">LEKCJA 29</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA30.TXT">LEKCJA 30</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA31.TXT">LEKCJA 31</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA32.TXT">LEKCJA 32</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA33.TXT">LEKCJA 33</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA34.TXT">LEKCJA 34</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA35.TXT">LEKCJA 35</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA36.TXT">LEKCJA 36</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA37.TXT">LEKCJA 37</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA38.TXT">LEKCJA 38</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA39.TXT">LEKCJA 39</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA40.TXT">LEKCJA 40</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA41.TXT">LEKCJA 41</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA42.TXT">LEKCJA 42</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA43.TXT">LEKCJA 43</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA44.TXT">LEKCJA 44</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA45.TXT">LEKCJA 45</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA46.TXT">LEKCJA 46</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA47.TXT">LEKCJA 47</a><br>
<a href="http://argon.kul.lublin.pl/%7Ewawryl/zad4/index.php?plik=LEKCJA48.TXT">LEKCJA 48</a><br>
   </td>
   <td valign="top" width="490">
     <h2>LEKCJA 44: O Okienkach dialogowych.  
</h2>
________________________________________________________________ 
<br>
O tym, jak konstruuje siê okienka dialogowe.  
<br>
________________________________________________________________ 
<br>
 
<br>
Do wyœwietlania okienek dialogowych w Windows API s³u¿y funkcja  
<br>
DialogBox(), a do zakoñczenia ich "¿ycia na ekranie" -  
<br>
EndDialog(). Podobnie jak ka¿de okno, równie¿ okno dialogowe  
<br>
musi mieæ swoj¹ funkcjê, obs³ugi komunikatów Windows. Zamiast  
<br>
WindowProc() nazywa siê j¹ tradycyjnie DlgProc(): 
<br>
 
<br>
BOOL FAR PASCAL DlgProc(HWND hDLG, unsigned Message, WORD  
<br>
                           wParam, LONG lParam);  
<br>
{  
<br>
switch (message)  
<br>
  {  
<br>
  ...  
<br>
  default: return (0);  
<br>
  }  
<br>
}  
<br>
 
<br>
Za wyj¹tkiem braku domyœlnego handlera Windows -  
<br>
DefWindowProc(), który jest zbêdny, w zwi¹zku z wewnêtrznie  
<br>
przyjmowanymi wartoœciami domyœlnymi, funkcja podobna jest  
<br>
bardzo w swojej konstrukcji do WindowProc(). Funkcja zwraca  
<br>
wartoœæ FALSE (czyli 0), jeœli przes³any komunikat nie zosta³  
<br>
obs³u¿ony. Typowymi komunikatami, które rozpatruje wiêkszoœæ  
<br>
okienek dialogowych, s¹ WM_INITDIALOG oraz WM_COMMAND. 
<br>
 
<br>
Przyk³ad okienka dialogowego: 
<br>
 
<br>
------------------Plik: DLGBOX1.H------------------------------- 
<br>
 
<br>
#define szAppName "DLGBOX1" 
<br>
#define IDM_DLG1 100 
<br>
 
<br>
------------------Plik zasobów: DLGBOX1.RC---------------------- 
<br>
  
<br>
#include "DLGBOX1.H"  
<br>
#include <windows.h>  
<br>
  
<br>
IDI_ICON ICON CONTROL.ICO  
<br>
  
<br>
DLGBOX1 MENU  
<br>
BEGIN  
<br>
  MENUITEM "&amp;O DlgBox" IDM_DLG1  
<br>
/* to menu pojawi siê w oknie macie¿ystym */ 
<br>
END  
<br>
  
<br>
DLGBOX1 DIALOG 30,30,200,100 
<br>
 
<br>
/* Pierwsze liczby to wspó³rzêdne lewego-górnego rogu okna, dwie 
<br>
 
<br>
nastêpne - to szerokoœæ i d³ugoœæ. Wspó³rzêdne s¹ wzglêdne.  
<br>
Punkt (0,0) to naro¿nik okna macie¿ystego                  */ 
<br>
 
<br>
STYLE WS_POPUP | WS_DLGFRAME  
<br>
 
<br>
BEGIN  
<br>
LTEXT "Przyklad"                  -1, 0, 12, 160, 8  
<br>
CTEXT "DLGBOX1 - Przyklad"        -1, 0, 36, 160, 8  
<br>
DEFPUSHBUTTON "OK"           IDOK, 64, 60,  32,14, WS_GROUP  
<br>
END  
<br>
---------------------------------------------------------------- 
<br>
 
<br>
Pomiêdzy par¹ s³ów kluczowych BEGIN-END mo¿na umieszczaæ ró¿ne  
<br>
instrukcje steruj¹ce. Definiuj¹ one, jaki rodzaj okna  
<br>
steruj¹cego uka¿e siê w okienku dialogowym. Instrukcje te mo¿na  
<br>
stosowaæ w nastêpuj¹cym formacie:  
<br>
 
<br>
typ_okna "tekst" ID, x, y, szerokoœæ, wysokoœæ [styl]  
<br>
 
<br>
Parametr styl jest opcjonalny. Styl okna okreœlaj¹  
<br>
identyfikatory predefiniowane w API Windows (WS_...). Parametr  
<br>
ID jest odpowiednikiem identyfikatora dla okien potomnych typu  
<br>
Child Window; dla okien steruj¹cych, które nie zwracaj¹  
<br>
komunikatów do okna macierzystego, ma wartoœæ -1. IDOK  
<br>
wykorzystaliœmy jako identyfikator dla okna steruj¹cego typu  
<br>
BUTTON. Zostanie on wys³any do funkcji okienkowej jako wartoœæ  
<br>
parametru wParam, gdy u¿ytkownik kliknie klawisz.  
<br>
 
<br>
------------------Plik g³ówny: DLGBOX1.CPP---------------------- 
<br>
 
<br>
 
<br>
#include <windows.h>  
<br>
#include <stdio.h>  
<br>
#include <string.h>  
<br>
#include "DLGBOX1.H" 
<br>
#pragma argused  
<br>
 
<br>
HANDLE    hInst;  
<br>
  
<br>
long FAR PASCAL  WndProc (HWND, unsigned, WORD, LONG) ;  
<br>
BOOL FAR PASCAL  ControlProc (HWND, unsigned, WORD, LONG) ;  
<br>
  
<br>
int PASCAL WinMain(HANDLE hInstance, HANDLE hPrevInstance,  
<br>
   LPSTR lpszCmdLine, int nCmdShow )  
<br>
{  
<br>
    WNDCLASS wndClass;  
<br>
    MSG msg;  
<br>
    HWND hWnd;  
<br>
    if ( !hPrevInstance )  
<br>
    {  
<br>
wndClass.style= CS_HREDRAW | CS_VREDRAW ;  
<br>
wndClass.lpfnWndProc= WndProc;  
<br>
wndClass.cbClsExtra = 0;  
<br>
wndClass.cbWndExtra= 0;  
<br>
wndClass.hInstance = hInstance;  
<br>
wndClass.hIcon = LoadIcon(NULL, szAppName);  
<br>
wndClass.hCursor= LoadCursor(NULL, IDC_ARROW );  
<br>
wndClass.hbrBackground= GetStockObject(WHITE_BRUSH );  
<br>
wndClass.lpszMenuName= szAppName;  
<br>
wndClass.lpszClassName= szAppName;  
<br>
  
<br>
    if (!RegisterClass(&amp;wndClass))  
<br>
return 0;  
<br>
    }  
<br>
  
<br>
hInst = hInstance;  
<br>
hWnd = CreateWindow(szAppName, "DLGBOX1", WS_OVERLAPPEDWINDOW,  
<br>
CW_USEDEFAULT, 0, CW_USEDEFAULT, 0, 0, 0, hInstance, 0);  
<br>
  
<br>
    ShowWindow(hWnd, nCmdShow);  
<br>
    UpdateWindow(hWnd);  
<br>
  
<br>
    while (GetMessage(&amp;msg, 0, 0, 0))  
<br>
    {  
<br>
  TranslateMessage(&amp;msg );  
<br>
  DispatchMessage(&amp;msg );  
<br>
    }  
<br>
    return 0;  
<br>
}  
<br>
  
<br>
BOOL FAR PASCAL ControlProc (HWND hDlg, unsigned Message,  
<br>
 WORD wParam, LONG lParam)  
<br>
{  
<br>
    switch(msg)  
<br>
    {  
<br>
case WM_INITDIALOG:  
<br>
     return TRUE; 
<br>
    break;  
<br>
case WM_COMMAND:  
<br>
     switch(wParam)  
<br>
     {  
<br>
     case IDOK:  
<br>
     case IDCANCEL:  
<br>
  EndDialog(hDlg,0);  
<br>
  return TRUE;  
<br>
     }  
<br>
     break;  
<br>
    }  
<br>
    return (0);  
<br>
}  
<br>
  
<br>
long FAR PASCAL WndProc (HWND hWnd, unsigned msg,  
<br>
 WORD wParam, LONG lParam)  
<br>
{  
<br>
FARPROC lpControlProc;  
<br>
    switch(Message)  
<br>
    {  
<br>
case WM_COMMAND:  
<br>
    switch(wParam)  
<br>
    {  
<br>
    case IDM_ABOUT:  
<br>
 lpControlProc = MakeProcInstance((FARPROC) ControlProc, hInst); 
<br>
 
<br>
 DialogBox(hInst, "DLGBOX1", hWnd, lpControlProc);  
<br>
 return 0;  
<br>
    }  
<br>
    break;  
<br>
case WM_DESTROY:  
<br>
    hDC = BeginPaint(hWnd , &amp;ps);  
<br>
    TextOut(hDC, 30, 50,"Demo okienka dialogowego", 25);  
<br>
    TextOut(hDC, 30, 70,"Zastosuj menu...", 17);  
<br>
    EndPaint(hWnd, &amp;ps);  
<br>
    break;  
<br>
case WM_DESTROY:  
<br>
    PostQuitMessage(0);  
<br>
    break;  
<br>
  
<br>
default:  
<br>
    return (DefWindowProc(hWnd,Message,wParam,lParam));  
<br>
    }  
<br>
    return 0;  
<br>
}  
<br>
  
<br>
Stosuj¹c okienko edycyjne mo¿emy u¿yæ nastêpuj¹cych  
<br>
predefiniowanych parametrów: 
<br>
 
<br>
CONTROL         - okreœla okno elementu steruj¹cego zdefiniowane 
<br>
 
<br>
                   przez u¿ytkownika.  
<br>
 
<br>
CONTROL "tekst", klasa, styl, x, y, szerokoœæ, wysokoœæ  
<br>
 
<br>
LTEXT  - element steruj¹cy: okienko tekstowe 
<br>
         Wyrównywanie tesktu: do lewej.  
<br>
RTEXT  - j. w. Wyrównywanie tesktu: do prawej 
<br>
CTEXT  - j. w. Wyrównywanie tesktu: centrowanie w okienku 
<br>
CHECKBOX - pole tekstowe po prawej stronie prze³¹cznika typu  
<br>
           Check Box. 
<br>
PUSHBUTTON  - Klawisz z napisem. 
<br>
LISTBOX  - okienko z list¹ 
<br>
GROUPBOX  - grupa elementów steruj¹cych typu BUTTON; zgrupowanie 
<br>
 
<br>
            kilku elementów steruj¹cych i otoczenie ramk¹. Tekst 
<br>
 
<br>
            zostanie umieszczony w lewym górnym rogu.  
<br>
DEFPUSHBUTTON    - Klawisz domyœlny w stylu BS_DEFPUSHBUTTON.  
<br>
RADIOBUTTON     - analogicznie jak dla stylu BS_RADIOBUTTON. 
<br>
EDITTEXT         - tworzy okno oparte na klasie EDIT. 
<br>
COMBOBOX         - tworz okno oparte na klasie COMBOBOX. 
<br>
ICON             - definiuje ikonê opart¹ na klasie STATIC; w  
<br>
                    okienku dialogowym.  
<br>
SCROLLBAR       - tworzy okno oparte na klasie SCROLLBAR.  
<br>
 
<br>
[!!!]UWAGA  
<br>
________________________________________________________________ 
<br>
W niektórych przypadkach okienko dialogowe mo¿e byæ g³ównym  
<br>
oknem aplikacji.  
<br>
________________________________________________________________ 
<br>
 
<br>

     
   </string.h></stdio.h></windows.h></windows.h></td>
 </tr>
</tbody></table>
  

</body></html>